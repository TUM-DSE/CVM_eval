#!/usr/bin/env bpftrace

#define BENCHMARK_PORT 0xf4

BEGIN {
    @ = 0;
    @EVENT[0]   = "OVMF: PEI main start";
    @EVENT[1]   = "OVMF: PEI main end";
    @EVENT[100] = "OVMF: DXE main end";
    @EVENT[101] = "OVMF: DXE main start";
    @EVENT[102] = "OVMF: EXITBOOTSERVICE";
    @EVENT[230] = "Linux: kernel_start";
    @EVENT[231] = "Linux: init_start";
    @EVENT[240] = "Linux: systemd init end";
	@EVENT[245] = "Client opens connection";
	@EVENT[246] = "Client closes connection";
	@EVENT[247] = "Server starts request handling";
}

// QEMU entry point
u:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:main {
    printf("%llu: QEMU: main\n", nsecs);
}

ur:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:main {
    printf("%llu: QEMU: exit\n", nsecs);
    @ = 0;
}

u:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:sev_kvm_init {
    printf("%llu: QEMU: sev_kvm_init\n", nsecs);
}

ur:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:sev_kvm_init {
    printf("%llu: QEMU: sev_kvm_init done\n", nsecs);
}

u:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:kvm_arch_init {
    printf("%llu: QEMU: kvm_arch_init\n", nsecs);
}

ur:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:kvm_arch_init {
    printf("%llu: QEMU: kvm_arch_init done\n", nsecs);
}

u:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:memory_region_init_rom_device {
    printf("%llu: QEMU: memory_region_init_rom_device\n", nsecs);
}

ur:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:memory_region_init_rom_device {
    printf("%llu: QEMU: memory_region_init_rom_device done\n", nsecs);
}

u:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:sev_snp_launch_finish {
    printf("%llu: QEMU: sev_snp_launch_finish\n", nsecs);
}

ur:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:sev_snp_launch_finish {
    printf("%llu: QEMU: sev_snp_launch_finish done\n", nsecs);
}

u:../../build/qemu-amd-sev-snp/bin/.qemu-system-x86_64-wrapped:kvm_cpu_exec / @ == 0/ {
    @ = 1;
    printf("%llu: QEMU: kvm_cpu_exec\n", nsecs);
}

tracepoint:kvm:kvm_pio {
    if (args->port == BENCHMARK_PORT) {
        printf("%llu: %d %s\n", nsecs, args->val, @EVENT[args->val]);
    }
}

END {
    clear(@);
    clear(@EVENT);
}

ubuntu@nosev:~/mbw$ ./mbw -t2 1024
Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MCBLOCK	Elapsed: 0.09489	MiB: 1024.00000	Copy: 10791.443 MiB/s
1	Method: MCBLOCK	Elapsed: 0.09456	MiB: 1024.00000	Copy: 10829.218 MiB/s
2	Method: MCBLOCK	Elapsed: 0.09463	MiB: 1024.00000	Copy: 10820.864 MiB/s
3	Method: MCBLOCK	Elapsed: 0.09440	MiB: 1024.00000	Copy: 10847.228 MiB/s
4	Method: MCBLOCK	Elapsed: 0.09457	MiB: 1024.00000	Copy: 10828.073 MiB/s
5	Method: MCBLOCK	Elapsed: 0.09468	MiB: 1024.00000	Copy: 10815.378 MiB/s
6	Method: MCBLOCK	Elapsed: 0.09485	MiB: 1024.00000	Copy: 10795.652 MiB/s
7	Method: MCBLOCK	Elapsed: 0.09480	MiB: 1024.00000	Copy: 10801.688 MiB/s
8	Method: MCBLOCK	Elapsed: 0.09407	MiB: 1024.00000	Copy: 10885.164 MiB/s
9	Method: MCBLOCK	Elapsed: 0.09443	MiB: 1024.00000	Copy: 10843.552 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.09459	MiB: 1024.00000	Copy: 10825.760 MiB/s
ubuntu@nosev:~/mbw$ ./mbw -t2 2048
Long uses 8 bytes. Allocating 2*268435456 elements = 4294967296 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MCBLOCK	Elapsed: 0.19085	MiB: 2048.00000	Copy: 10730.828 MiB/s
1	Method: MCBLOCK	Elapsed: 0.19027	MiB: 2048.00000	Copy: 10763.539 MiB/s
2	Method: MCBLOCK	Elapsed: 0.19032	MiB: 2048.00000	Copy: 10760.824 MiB/s
3	Method: MCBLOCK	Elapsed: 0.19037	MiB: 2048.00000	Copy: 10757.772 MiB/s
4	Method: MCBLOCK	Elapsed: 0.19026	MiB: 2048.00000	Copy: 10764.104 MiB/s
5	Method: MCBLOCK	Elapsed: 0.19020	MiB: 2048.00000	Copy: 10767.783 MiB/s
6	Method: MCBLOCK	Elapsed: 0.19038	MiB: 2048.00000	Copy: 10757.206 MiB/s
7	Method: MCBLOCK	Elapsed: 0.19027	MiB: 2048.00000	Copy: 10763.482 MiB/s
8	Method: MCBLOCK	Elapsed: 0.19589	MiB: 2048.00000	Copy: 10454.954 MiB/s
9	Method: MCBLOCK	Elapsed: 0.19509	MiB: 2048.00000	Copy: 10497.880 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.19139	MiB: 2048.00000	Copy: 10700.613 MiB/s
ubuntu@nosev:~/mbw$ ./mbw -t2 4096
Long uses 8 bytes. Allocating 2*536870912 elements = 8589934592 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MCBLOCK	Elapsed: 0.40386	MiB: 4096.00000	Copy: 10142.154 MiB/s
1	Method: MCBLOCK	Elapsed: 0.40423	MiB: 4096.00000	Copy: 10132.945 MiB/s
2	Method: MCBLOCK	Elapsed: 0.40363	MiB: 4096.00000	Copy: 10147.883 MiB/s
3	Method: MCBLOCK	Elapsed: 0.39204	MiB: 4096.00000	Copy: 10447.967 MiB/s
4	Method: MCBLOCK	Elapsed: 0.38090	MiB: 4096.00000	Copy: 10753.479 MiB/s
5	Method: MCBLOCK	Elapsed: 0.38066	MiB: 4096.00000	Copy: 10760.145 MiB/s
6	Method: MCBLOCK	Elapsed: 0.38095	MiB: 4096.00000	Copy: 10752.067 MiB/s
7	Method: MCBLOCK	Elapsed: 0.38075	MiB: 4096.00000	Copy: 10757.687 MiB/s
8	Method: MCBLOCK	Elapsed: 0.38101	MiB: 4096.00000	Copy: 10750.261 MiB/s
9	Method: MCBLOCK	Elapsed: 0.38102	MiB: 4096.00000	Copy: 10749.979 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.38891	MiB: 4096.00000	Copy: 10532.116 MiB/s

ubuntu@nosev:~/mbw$ ./mbw -t1 1024
Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: DUMB	Elapsed: 0.18907	MiB: 1024.00000	Copy: 5416.041 MiB/s
1	Method: DUMB	Elapsed: 0.18885	MiB: 1024.00000	Copy: 5422.436 MiB/s
2	Method: DUMB	Elapsed: 0.18899	MiB: 1024.00000	Copy: 5418.247 MiB/s
3	Method: DUMB	Elapsed: 0.18897	MiB: 1024.00000	Copy: 5418.764 MiB/s
4	Method: DUMB	Elapsed: 0.18874	MiB: 1024.00000	Copy: 5425.510 MiB/s
5	Method: DUMB	Elapsed: 0.18886	MiB: 1024.00000	Copy: 5422.006 MiB/s
6	Method: DUMB	Elapsed: 0.18885	MiB: 1024.00000	Copy: 5422.264 MiB/s
7	Method: DUMB	Elapsed: 0.18900	MiB: 1024.00000	Copy: 5418.104 MiB/s
8	Method: DUMB	Elapsed: 0.19629	MiB: 1024.00000	Copy: 5216.665 MiB/s
9	Method: DUMB	Elapsed: 0.18877	MiB: 1024.00000	Copy: 5424.591 MiB/s
AVG	Method: DUMB	Elapsed: 0.18964	MiB: 1024.00000	Copy: 5399.745 MiB/s
ubuntu@nosev:~/mbw$ ./mbw -t1 2048
Long uses 8 bytes. Allocating 2*268435456 elements = 4294967296 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: DUMB	Elapsed: 0.38053	MiB: 2048.00000	Copy: 5382.038 MiB/s
1	Method: DUMB	Elapsed: 0.38281	MiB: 2048.00000	Copy: 5349.912 MiB/s
2	Method: DUMB	Elapsed: 0.38049	MiB: 2048.00000	Copy: 5382.505 MiB/s
3	Method: DUMB	Elapsed: 0.38058	MiB: 2048.00000	Copy: 5381.274 MiB/s
4	Method: DUMB	Elapsed: 0.38741	MiB: 2048.00000	Copy: 5286.348 MiB/s
5	Method: DUMB	Elapsed: 0.38662	MiB: 2048.00000	Copy: 5297.205 MiB/s
6	Method: DUMB	Elapsed: 0.38228	MiB: 2048.00000	Copy: 5357.302 MiB/s
7	Method: DUMB	Elapsed: 0.38109	MiB: 2048.00000	Copy: 5374.016 MiB/s
8	Method: DUMB	Elapsed: 0.38130	MiB: 2048.00000	Copy: 5371.085 MiB/s
9	Method: DUMB	Elapsed: 0.38224	MiB: 2048.00000	Copy: 5357.876 MiB/s
AVG	Method: DUMB	Elapsed: 0.38254	MiB: 2048.00000	Copy: 5353.751 MiB/s
ubuntu@nosev:~/mbw$ ./mbw -t1 4096
Long uses 8 bytes. Allocating 2*536870912 elements = 8589934592 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: DUMB	Elapsed: 0.76116	MiB: 4096.00000	Copy: 5381.239 MiB/s
1	Method: DUMB	Elapsed: 0.76229	MiB: 4096.00000	Copy: 5373.276 MiB/s
2	Method: DUMB	Elapsed: 0.76332	MiB: 4096.00000	Copy: 5366.012 MiB/s
3	Method: DUMB	Elapsed: 0.76143	MiB: 4096.00000	Copy: 5379.387 MiB/s
4	Method: DUMB	Elapsed: 0.76225	MiB: 4096.00000	Copy: 5373.565 MiB/s
5	Method: DUMB	Elapsed: 0.77412	MiB: 4096.00000	Copy: 5291.190 MiB/s
6	Method: DUMB	Elapsed: 0.76284	MiB: 4096.00000	Copy: 5369.416 MiB/s
7	Method: DUMB	Elapsed: 0.76442	MiB: 4096.00000	Copy: 5358.318 MiB/s
8	Method: DUMB	Elapsed: 0.76710	MiB: 4096.00000	Copy: 5339.612 MiB/s
9	Method: DUMB	Elapsed: 0.76177	MiB: 4096.00000	Copy: 5376.944 MiB/s
AVG	Method: DUMB	Elapsed: 0.76407	MiB: 4096.00000	Copy: 5360.769 MiB/s



ubuntu@nosev:~/mbw$ ./mbw -t0 4096
Long uses 8 bytes. Allocating 2*536870912 elements = 8589934592 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.20537	MiB: 4096.00000	Copy: 19944.199 MiB/s
1	Method: MEMCPY	Elapsed: 0.20402	MiB: 4096.00000	Copy: 20076.660 MiB/s
2	Method: MEMCPY	Elapsed: 0.20421	MiB: 4096.00000	Copy: 20057.980 MiB/s
3	Method: MEMCPY	Elapsed: 0.20446	MiB: 4096.00000	Copy: 20033.258 MiB/s
4	Method: MEMCPY	Elapsed: 0.20423	MiB: 4096.00000	Copy: 20055.328 MiB/s
5	Method: MEMCPY	Elapsed: 0.20635	MiB: 4096.00000	Copy: 19850.155 MiB/s
6	Method: MEMCPY	Elapsed: 0.20892	MiB: 4096.00000	Copy: 19605.309 MiB/s
7	Method: MEMCPY	Elapsed: 0.20626	MiB: 4096.00000	Copy: 19858.046 MiB/s
8	Method: MEMCPY	Elapsed: 0.20830	MiB: 4096.00000	Copy: 19663.946 MiB/s
9	Method: MEMCPY	Elapsed: 0.20402	MiB: 4096.00000	Copy: 20076.463 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.20561	MiB: 4096.00000	Copy: 19920.755 MiB/s
ubuntu@nosev:~/mbw$ ./mbw -t0 2048
Long uses 8 bytes. Allocating 2*268435456 elements = 4294967296 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.10386	MiB: 2048.00000	Copy: 19718.473 MiB/s
1	Method: MEMCPY	Elapsed: 0.10271	MiB: 2048.00000	Copy: 19939.830 MiB/s
2	Method: MEMCPY	Elapsed: 0.10230	MiB: 2048.00000	Copy: 20020.333 MiB/s
3	Method: MEMCPY	Elapsed: 0.10247	MiB: 2048.00000	Copy: 19986.923 MiB/s
4	Method: MEMCPY	Elapsed: 0.10243	MiB: 2048.00000	Copy: 19995.118 MiB/s
5	Method: MEMCPY	Elapsed: 0.10248	MiB: 2048.00000	Copy: 19984.387 MiB/s
6	Method: MEMCPY	Elapsed: 0.10241	MiB: 2048.00000	Copy: 19997.657 MiB/s
7	Method: MEMCPY	Elapsed: 0.10250	MiB: 2048.00000	Copy: 19980.683 MiB/s
8	Method: MEMCPY	Elapsed: 0.10262	MiB: 2048.00000	Copy: 19956.929 MiB/s
9	Method: MEMCPY	Elapsed: 0.10269	MiB: 2048.00000	Copy: 19943.908 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.10265	MiB: 2048.00000	Copy: 19952.088 MiB/s
ubuntu@nosev:~/mbw$ ./mbw -t0 1024
Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.05293	MiB: 1024.00000	Copy: 19346.672 MiB/s
1	Method: MEMCPY	Elapsed: 0.05109	MiB: 1024.00000	Copy: 20041.492 MiB/s
2	Method: MEMCPY	Elapsed: 0.05117	MiB: 1024.00000	Copy: 20010.943 MiB/s
3	Method: MEMCPY	Elapsed: 0.05118	MiB: 1024.00000	Copy: 20006.643 MiB/s
4	Method: MEMCPY	Elapsed: 0.05124	MiB: 1024.00000	Copy: 19986.337 MiB/s
5	Method: MEMCPY	Elapsed: 0.05115	MiB: 1024.00000	Copy: 20018.376 MiB/s
6	Method: MEMCPY	Elapsed: 0.05117	MiB: 1024.00000	Copy: 20009.770 MiB/s
7	Method: MEMCPY	Elapsed: 0.05107	MiB: 1024.00000	Copy: 20050.125 MiB/s
8	Method: MEMCPY	Elapsed: 0.05114	MiB: 1024.00000	Copy: 20023.465 MiB/s
9	Method: MEMCPY	Elapsed: 0.05113	MiB: 1024.00000	Copy: 20027.773 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.05133	MiB: 1024.00000	Copy: 19950.047 MiB/s
ubuntu@sev:~/mbw$ ./mbw -t2 1024
Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MCBLOCK	Elapsed: 0.10052	MiB: 1024.00000	Copy: 10187.129 MiB/s
1	Method: MCBLOCK	Elapsed: 0.10029	MiB: 1024.00000	Copy: 10210.084 MiB/s
2	Method: MCBLOCK	Elapsed: 0.10010	MiB: 1024.00000	Copy: 10230.281 MiB/s
3	Method: MCBLOCK	Elapsed: 0.10139	MiB: 1024.00000	Copy: 10099.715 MiB/s
4	Method: MCBLOCK	Elapsed: 0.10004	MiB: 1024.00000	Copy: 10235.906 MiB/s
5	Method: MCBLOCK	Elapsed: 0.09998	MiB: 1024.00000	Copy: 10241.741 MiB/s
6	Method: MCBLOCK	Elapsed: 0.10006	MiB: 1024.00000	Copy: 10234.167 MiB/s
7	Method: MCBLOCK	Elapsed: 0.10011	MiB: 1024.00000	Copy: 10228.340 MiB/s
8	Method: MCBLOCK	Elapsed: 0.10007	MiB: 1024.00000	Copy: 10232.530 MiB/s
9	Method: MCBLOCK	Elapsed: 0.10000	MiB: 1024.00000	Copy: 10240.205 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.10026	MiB: 1024.00000	Copy: 10213.842 MiB/s
ubuntu@sev:~/mbw$ ./mbw -t2 2048
Long uses 8 bytes. Allocating 2*268435456 elements = 4294967296 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MCBLOCK	Elapsed: 0.20041	MiB: 2048.00000	Copy: 10219.255 MiB/s
1	Method: MCBLOCK	Elapsed: 0.19953	MiB: 2048.00000	Copy: 10263.863 MiB/s
2	Method: MCBLOCK	Elapsed: 0.19956	MiB: 2048.00000	Copy: 10262.783 MiB/s
3	Method: MCBLOCK	Elapsed: 0.20188	MiB: 2048.00000	Copy: 10144.741 MiB/s
4	Method: MCBLOCK	Elapsed: 0.19976	MiB: 2048.00000	Copy: 10252.251 MiB/s
5	Method: MCBLOCK	Elapsed: 0.19943	MiB: 2048.00000	Copy: 10269.216 MiB/s
6	Method: MCBLOCK	Elapsed: 0.19955	MiB: 2048.00000	Copy: 10263.143 MiB/s
7	Method: MCBLOCK	Elapsed: 0.19952	MiB: 2048.00000	Copy: 10264.584 MiB/s
8	Method: MCBLOCK	Elapsed: 0.19975	MiB: 2048.00000	Copy: 10253.073 MiB/s
9	Method: MCBLOCK	Elapsed: 0.19975	MiB: 2048.00000	Copy: 10252.919 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.19991	MiB: 2048.00000	Copy: 10244.456 MiB/s
ubuntu@sev:~/mbw$ ./mbw -t2 4096
Long uses 8 bytes. Allocating 2*536870912 elements = 8589934592 bytes of memory.
Using 262144 bytes as blocks for memcpy block copy test.
Getting down to business... Doing 10 runs per test.
0	Method: MCBLOCK	Elapsed: 0.40583	MiB: 4096.00000	Copy: 10092.797 MiB/s
1	Method: MCBLOCK	Elapsed: 0.40586	MiB: 4096.00000	Copy: 10092.200 MiB/s
2	Method: MCBLOCK	Elapsed: 0.40594	MiB: 4096.00000	Copy: 10090.111 MiB/s
3	Method: MCBLOCK	Elapsed: 0.40585	MiB: 4096.00000	Copy: 10092.299 MiB/s
4	Method: MCBLOCK	Elapsed: 0.40595	MiB: 4096.00000	Copy: 10089.962 MiB/s
5	Method: MCBLOCK	Elapsed: 0.40544	MiB: 4096.00000	Copy: 10102.530 MiB/s
6	Method: MCBLOCK	Elapsed: 0.41004	MiB: 4096.00000	Copy: 9989.245 MiB/s
7	Method: MCBLOCK	Elapsed: 0.41865	MiB: 4096.00000	Copy: 9783.806 MiB/s
8	Method: MCBLOCK	Elapsed: 0.41882	MiB: 4096.00000	Copy: 9779.811 MiB/s
9	Method: MCBLOCK	Elapsed: 0.41925	MiB: 4096.00000	Copy: 9769.780 MiB/s
AVG	Method: MCBLOCK	Elapsed: 0.41016	MiB: 4096.00000	Copy: 9986.237 MiB/s

ubuntu@sev:~/mbw$ ./mbw -t1 1024
Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: DUMB	Elapsed: 0.19026	MiB: 1024.00000	Copy: 5382.250 MiB/s
1	Method: DUMB	Elapsed: 0.18993	MiB: 1024.00000	Copy: 5391.545 MiB/s
2	Method: DUMB	Elapsed: 0.19012	MiB: 1024.00000	Copy: 5386.185 MiB/s
3	Method: DUMB	Elapsed: 0.19023	MiB: 1024.00000	Copy: 5383.014 MiB/s
4	Method: DUMB	Elapsed: 0.19052	MiB: 1024.00000	Copy: 5374.792 MiB/s
5	Method: DUMB	Elapsed: 0.19035	MiB: 1024.00000	Copy: 5379.479 MiB/s
6	Method: DUMB	Elapsed: 0.18999	MiB: 1024.00000	Copy: 5389.757 MiB/s
7	Method: DUMB	Elapsed: 0.18980	MiB: 1024.00000	Copy: 5395.238 MiB/s
8	Method: DUMB	Elapsed: 0.18981	MiB: 1024.00000	Copy: 5394.897 MiB/s
9	Method: DUMB	Elapsed: 0.19076	MiB: 1024.00000	Copy: 5367.917 MiB/s
AVG	Method: DUMB	Elapsed: 0.19018	MiB: 1024.00000	Copy: 5384.494 MiB/s
ubuntu@sev:~/mbw$ ./mbw -t1 2048
Long uses 8 bytes. Allocating 2*268435456 elements = 4294967296 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: DUMB	Elapsed: 0.38528	MiB: 2048.00000	Copy: 5315.670 MiB/s
1	Method: DUMB	Elapsed: 0.38391	MiB: 2048.00000	Copy: 5334.625 MiB/s
2	Method: DUMB	Elapsed: 0.38385	MiB: 2048.00000	Copy: 5335.390 MiB/s
3	Method: DUMB	Elapsed: 0.38252	MiB: 2048.00000	Copy: 5353.968 MiB/s
4	Method: DUMB	Elapsed: 0.38312	MiB: 2048.00000	Copy: 5345.514 MiB/s
5	Method: DUMB	Elapsed: 0.38394	MiB: 2048.00000	Copy: 5334.208 MiB/s
6	Method: DUMB	Elapsed: 0.39631	MiB: 2048.00000	Copy: 5167.685 MiB/s
7	Method: DUMB	Elapsed: 0.42301	MiB: 2048.00000	Copy: 4841.447 MiB/s
8	Method: DUMB	Elapsed: 0.40664	MiB: 2048.00000	Copy: 5036.408 MiB/s
9	Method: DUMB	Elapsed: 0.38565	MiB: 2048.00000	Copy: 5310.528 MiB/s
AVG	Method: DUMB	Elapsed: 0.39142	MiB: 2048.00000	Copy: 5232.194 MiB/s
ubuntu@sev:~/mbw$ ./mbw -t1 4096
Long uses 8 bytes. Allocating 2*536870912 elements = 8589934592 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: DUMB	Elapsed: 0.76108	MiB: 4096.00000	Copy: 5381.819 MiB/s
1	Method: DUMB	Elapsed: 0.76082	MiB: 4096.00000	Copy: 5383.672 MiB/s
2	Method: DUMB	Elapsed: 0.76096	MiB: 4096.00000	Copy: 5382.667 MiB/s
3	Method: DUMB	Elapsed: 0.75968	MiB: 4096.00000	Copy: 5391.744 MiB/s
4	Method: DUMB	Elapsed: 0.77268	MiB: 4096.00000	Copy: 5301.023 MiB/s
5	Method: DUMB	Elapsed: 0.77322	MiB: 4096.00000	Copy: 5297.328 MiB/s
6	Method: DUMB	Elapsed: 0.76877	MiB: 4096.00000	Copy: 5328.026 MiB/s
7	Method: DUMB	Elapsed: 0.77250	MiB: 4096.00000	Copy: 5302.231 MiB/s
8	Method: DUMB	Elapsed: 0.76020	MiB: 4096.00000	Copy: 5388.027 MiB/s
9	Method: DUMB	Elapsed: 0.77254	MiB: 4096.00000	Copy: 5301.970 MiB/s
AVG	Method: DUMB	Elapsed: 0.76625	MiB: 4096.00000	Copy: 5345.542 MiB/s

ubuntu@sev:~/mbw$ ./mbw -t0 4096
Long uses 8 bytes. Allocating 2*536870912 elements = 8589934592 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.21341	MiB: 4096.00000	Copy: 19192.833 MiB/s
1	Method: MEMCPY	Elapsed: 0.21336	MiB: 4096.00000	Copy: 19197.150 MiB/s
2	Method: MEMCPY	Elapsed: 0.21324	MiB: 4096.00000	Copy: 19208.584 MiB/s
3	Method: MEMCPY	Elapsed: 0.21297	MiB: 4096.00000	Copy: 19232.575 MiB/s
4	Method: MEMCPY	Elapsed: 0.21282	MiB: 4096.00000	Copy: 19246.583 MiB/s
5	Method: MEMCPY	Elapsed: 0.21248	MiB: 4096.00000	Copy: 19277.471 MiB/s
6	Method: MEMCPY	Elapsed: 0.21441	MiB: 4096.00000	Copy: 19103.230 MiB/s
7	Method: MEMCPY	Elapsed: 0.21446	MiB: 4096.00000	Copy: 19099.222 MiB/s
8	Method: MEMCPY	Elapsed: 0.21287	MiB: 4096.00000	Copy: 19241.972 MiB/s
9	Method: MEMCPY	Elapsed: 0.21253	MiB: 4096.00000	Copy: 19272.664 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.21326	MiB: 4096.00000	Copy: 19207.044 MiB/s
ubuntu@sev:~/mbw$ ./mbw -t0 2048
Long uses 8 bytes. Allocating 2*268435456 elements = 4294967296 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.10669	MiB: 2048.00000	Copy: 19195.261 MiB/s
1	Method: MEMCPY	Elapsed: 0.10632	MiB: 2048.00000	Copy: 19262.966 MiB/s
2	Method: MEMCPY	Elapsed: 0.11558	MiB: 2048.00000	Copy: 17719.175 MiB/s
3	Method: MEMCPY	Elapsed: 0.11663	MiB: 2048.00000	Copy: 17559.654 MiB/s
4	Method: MEMCPY	Elapsed: 0.11480	MiB: 2048.00000	Copy: 17839.877 MiB/s
5	Method: MEMCPY	Elapsed: 0.11492	MiB: 2048.00000	Copy: 17820.938 MiB/s
6	Method: MEMCPY	Elapsed: 0.11466	MiB: 2048.00000	Copy: 17862.127 MiB/s
7	Method: MEMCPY	Elapsed: 0.11490	MiB: 2048.00000	Copy: 17824.195 MiB/s
8	Method: MEMCPY	Elapsed: 0.11410	MiB: 2048.00000	Copy: 17948.538 MiB/s
9	Method: MEMCPY	Elapsed: 0.11411	MiB: 2048.00000	Copy: 17947.752 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.11327	MiB: 2048.00000	Copy: 18080.501 MiB/s
ubuntu@sev:~/mbw$ ./mbw -t0 1024
Long uses 8 bytes. Allocating 2*134217728 elements = 2147483648 bytes of memory.
Getting down to business... Doing 10 runs per test.
0	Method: MEMCPY	Elapsed: 0.05456	MiB: 1024.00000	Copy: 18769.705 MiB/s
1	Method: MEMCPY	Elapsed: 0.05312	MiB: 1024.00000	Copy: 19276.746 MiB/s
2	Method: MEMCPY	Elapsed: 0.05294	MiB: 1024.00000	Copy: 19344.114 MiB/s
3	Method: MEMCPY	Elapsed: 0.05303	MiB: 1024.00000	Copy: 19308.004 MiB/s
4	Method: MEMCPY	Elapsed: 0.05294	MiB: 1024.00000	Copy: 19343.383 MiB/s
5	Method: MEMCPY	Elapsed: 0.05298	MiB: 1024.00000	Copy: 19326.589 MiB/s
6	Method: MEMCPY	Elapsed: 0.05287	MiB: 1024.00000	Copy: 19366.430 MiB/s
7	Method: MEMCPY	Elapsed: 0.05301	MiB: 1024.00000	Copy: 19316.746 MiB/s
8	Method: MEMCPY	Elapsed: 0.05302	MiB: 1024.00000	Copy: 19314.924 MiB/s
9	Method: MEMCPY	Elapsed: 0.05286	MiB: 1024.00000	Copy: 19370.460 MiB/s
AVG	Method: MEMCPY	Elapsed: 0.05313	MiB: 1024.00000	Copy: 19272.174 MiB/s
